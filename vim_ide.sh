#!/bin/bash
USER_VIMRC_FILE=$(vim --version | grep '^\ \+.*:\ "$HOME[\\,\/].vimrc"' | sed 's/^\s\+.*:\ "\($HOME[\\,\/].vimrc\)"/\1/')
printf "User vim rc file was founded by path:\n%s\n\n" "$USER_VIMRC_FILE"

USER_VIMFILES_DIRECTORY=$(vim --version | grep '^\ \+.\+".\+[\\,\/].\+[\\,\/]vimrc' | sed 's/^\s\+.\+:\ "\(.\+[\\,\/].\+[\\,\/]\)vimrc"/\1/')
USER_PLUGINS_DIRECTORY="${USER_VIMFILES_DIRECTORY}bundle\\"
printf "User vim plugin directory was founded by path:\n%s\n\n" "$USER_PLUGINS_DIRECTORY"

EOF="\r\n"

declare -a COMMON_SETTINGS=(\
'"  Показывать номера строк'\ 
'set number'\ 
'" Включить подсветку синтаксиса'\ 
'syntax on'\ 
'" Поиск в процессе набора'\ 
'set incsearch'\ 
'" Подсвечивание результатов поиска'\ 
'set hlsearch'\ 
'" умная зависимость от регистра. Детали ":h smartcase"'\ 
'set ignorecase'\ 
'set smartcase'\ 
'" Кодировка текста по умолчанию utf8'\ 
'set termencoding=utf8'\ 
'" Включаем несовместимость настроек с Vi, так как Vi нам и не понадобится'\ 
'set nocompatible'\ 
'" Показывать положение курсора всё время.'\ 
'set ruler'\ 
'" Показывать незавершённые команды в статусбаре'\ 
'set showcmd'\ 
'" Фолдинг по отсупам'\ 
'set foldenable'\ 
'set foldlevel=100'\ 
'set foldmethod=indent'\ 
'" Выключаем звуковое оповещение о достижении конца буффера, невозможности действия и т.д.'\ 
'set noerrorbells visualbell t_vb='\ 
'autocmd GUIEnter * set visualbell t_vb='\ 
'" Поддержка мыши'\ 
'set mouse=a'\ 
'set mousemodel=popup'\ 
'" Не выгружать буфер, когда переключаемся на другой'\ 
'" Это позволяет редактировать несколько файлов в один и тот же момент без необходимости сохранения каждый раз'\ 
'" когда переключаешься между ними'\ 
'set hidden'\ 
'" Скрыть панель в gui версии'\ 
'set guioptions-=T'\ 
'" Сделать строку команд высотой в одну строку'\ 
'set ch=1'\ 
'" Скрывать указатель мыши, когда печатаем'\ 
'set mousehide'\ 
'" Включить автоотступы'\ 
'set autoindent'\ 
'" Не переносить строки'\ 
'set nowrap'\ 
'" Преобразование Таба в пробелы'\ 
'set expandtab'\ 
'" Размер табуляции по умолчанию'\ 
'set shiftwidth=4'\ 
'set softtabstop=4'\ 
'set tabstop=4'\ 
'" Формат строки состояния. Альтернативные варианты настройки ":h statusline"'\ 
'set statusline=%&lt;%f%h%m%r\ %b\ %{&amp;encoding}\ 0x\ \ %l,%c%V\ %P'\ 
'set laststatus=2'\ 
'" Включаем \"умные\" отступы, например, авто отступ после "{"'\ 
'set smartindent'\ 
'" Отображение парных символов'\ 
'set showmatch'\ 
'" Указание размеров окна редактора по умолчанию'\ 
'set lines=50'\ 
'set columns=140'\ 
'" Навигация с учетом русских символов, учитывается командами следующее/предыдущее слово и т.п.'\ 
'set iskeyword=@,48-57,_,192-255'\ 
'" Удаление символов бэкспэйсом в Windows'\ 
'set backspace=indent,eol,start'\ 
'" Подсвечивать линию текста, на которой находится курсор'\ 
'set cursorline'\ 
'highlight CursorLine guibg=lightblue ctermbg=lightgray'\ 
'highlight CursorLine term=none cterm=none'\ 
'" Увеличение размера истории'\ 
'set history=200'\ 
'" Дополнительная информация в строке состояния'\ 
'set wildmenu'\ 
'" Настройка отображения специальных символов'\ 
'set list listchars=tab:>\ ,trail:·'\ 
'" Включение сторонних плагинов'\ 
'filetype plugin on' 
)

function SetupVim {
	printf "%s$EOF%s$EOF%s$EOF%s$EOF"\
		"\"*********************************************************************"\
		"\"*                    <Added by vim_ide.sh>                          *"\
		"\"*********************************************************************"\
		>>$USER_VIMRC_FILE

	for SETTINGS_LINE in ${!COMMON_SETTINGS[*]} 
	do
		printf "%s$EOF" "${COMMON_SETTINGS[$SETTINGS_LINE]}" >> $USER_VIMRC_FILE
	done
	printf "Commong settings was wrote.$EOF"		

	printf 	"%s$EOF%s$EOF%s$EOF"\
		"\"*********************************************************************"\
		"\"*                    </Added by vim_ide.sh>                         *"\
		"\"*********************************************************************"\
		>> $USER_VIMRC_FILE
}



#SetupVim
